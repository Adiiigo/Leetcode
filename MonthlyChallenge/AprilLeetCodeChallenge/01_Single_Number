Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,1]
Output: 1

Example 2:

Input: [4,1,2,1,2]
Output: 4

Solutions:

Approaches 1: Using XOR
-> When two numbers are XOR-ed together, their results is nullified
-> In the end, ony thayt number will remain which doesnt not have any pair in the array 

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        
        int x = 0 ;
        
        for(int num : nums){
            x = x^num;
        }
        
        return x ;
    }
};

Time Complexity :O(n)
Space Coomplexity : O(1)
