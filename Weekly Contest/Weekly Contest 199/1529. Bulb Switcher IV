
Solutions:

//Approach 1:
class Solution {
    
    void calSwitch(string& target , int j){
        
        int length = target.size() ;
        
        for(int i = j ; j < length ; j++){
            if(target[i] == '0') target[i] = '1' ;
            else target[i] = '0' ;
        }
    }
    
    bool calAllZeros(string& target){
         int length = target.size() ;
        
        for(int i = 0 ; i < length ; i++){
            if(target[i] == '1') return false ;
        }
        return true ;
    }
    
public:
    int minFlips(string target) {
        
        int length = target.size() ;
        
        int i = length-1;
        int zero = 0 ;
        int one = 1 ;
        int answer = 0 ; 
        
        while(i>0){
            int count = 0 ;
            int j = length-1 ;
            if(zero%2 == 0){
                
                for(; j >=0 ; j--){
                    if(target[j] == '0'){
                        break ;
                    }
                }
                calSwitch(target , j) ;
                answer++ ;
            }
            else if(one%2 == 0){
                for(; j >=0 ; j--){
                    if(target[j] == '1'){
                        break ;
                    }
                }
                calSwitch(target , j) ;
                answer++ ;
            }
            zero++ ;
            one++ ;
            i = j ;
            i--;
        }
        
        while(calAllZeros(target) == false){
            int j = length-1;
            for(; j >=0 ; j--){
                    if(target[j] == '1'){
                        break ;
                    }
                }
                calSwitch(target , j) ;
                answer++ ;
        }
        return answer ;
    }
};
